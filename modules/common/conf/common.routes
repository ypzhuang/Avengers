# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

OPTIONS        /*url                             controllers.common.Application.preflight(url: String)

GET            /                                 controllers.common.Application.index()
GET            /login                            controllers.common.SecurityController.login()
POST           /authenticate                     controllers.common.SecurityController.authenticate(mime:String ?= "json")
POST           /role                             controllers.common.SecurityController.role()

GET            /actions                          controllers.common.Actions.mapOfModule()
POST           /actions/go                       controllers.common.Actions.go()

GET            /products                         controllers.common.Products.list()
GET            /products/search                  controllers.common.Products.search(filter: String ?= "", page: Int ?= 0,pageSize: Int ?=5 )
GET            /products/home                    controllers.common.Products.home()
GET            /products/new                     controllers.common.Products.newProduct()
GET            /products/mode                    controllers.common.Products.currentMode()
GET            /products/push                    controllers.common.Products.push(deviceToken:String)
GET            /products/androidPush             controllers.common.Products.androidPush(deviceToken:String)
GET            /products/:ean                    controllers.common.Products.details(ean: Long)
POST           /products/save                    controllers.common.Products.save()
DELETE         /products/:ean                    controllers.common.Products.delete(ean: Long)




GET            /ltrs/list4edit                   controllers.common.Ltrs.list4edit(filter:String ?= "", page: Int ?= 0, pageSize: Int ?= 20 )
GET            /ltrs/count4edit                  controllers.common.Ltrs.count4edit(filter:String ?= "", page: Int ?= 0, pageSize: Int ?= 20 )

GET            /ltrs/list4review                 controllers.common.Ltrs.list4review(filter:String ?= "", isException:java.lang.Boolean ?= java.lang.Boolean.FALSE, page: Int ?= 0, pageSize: Int ?= 20 )
GET            /ltrs/count4review                controllers.common.Ltrs.count4review(filter:String ?= "", isException:java.lang.Boolean ?= java.lang.Boolean.FALSE, page: Int ?= 0, pageSize: Int ?= 20 )

GET            /ltrs/list                        controllers.common.Ltrs.list(filter:String ?= "",  status:String ?= "", page: Int ?= 0, pageSize: Int ?= 20 )
GET            /ltrs/count                       controllers.common.Ltrs.count(filter:String ?= "", status:String ?= "",page: Int ?= 0, pageSize: Int ?= 20 )


GET            /ltrs/:id                         controllers.common.Ltrs.findById(id: Long)

POST           /ltrs/savePicture                 controllers.common.Ltrs.savePicture()
POST           /ltrs/uploadLtrPicture/:id        controllers.common.Ltrs.uploadLtrPicture(id: Long)

#updateHospital test time and hospitail
POST           /ltrs/updateHospital/:id          controllers.common.Ltrs.updateHospital(id: Long)
POST           /ltrs/updateFailId/:id            controllers.common.Ltrs.updateLtrFailId(id: Long)

POST           /ltrs/reject/:id                  controllers.common.Ltrs.reject(id: Long)
POST           /ltrs/push/:id                    controllers.common.Ltrs.push(id: Long)

GET            /ivs/list/:ltrId                  controllers.common.IndicatorValues.listByLtrId(ltrId:Long)
POST           /ivs/save/:ltrId                  controllers.common.IndicatorValues.saveIndicatorValues(ltrId:Long)
POST           /ivs/commit/:ltrId                controllers.common.IndicatorValues.commitIndicatorValues(ltrId:Long)


GET            /indicators/$id<[0-9]>            controllers.common.Indicators.findById(id: Long)

GET            /indicators/list                  controllers.common.Indicators.list(filter:String ?= "",category:Int ?= -1, page: Int ?= 0, pageSize: Int ?= 20)
GET            /indicators/count                 controllers.common.Indicators.count(filter:String ?= "",category:Int ?= -1, page: Int ?= 0, pageSize: Int ?= 20)

GET            /indicators/:name                 controllers.common.Indicators.filterByVal(name: String)


GET            /hospitals/list                   controllers.common.Hospitals.list(filter:String ?= "", page: Int ?= 0, pageSize: Int ?= 20 )
GET            /hospitals/count                  controllers.common.Hospitals.count(filter:String ?= "", page: Int ?= 0, pageSize: Int ?= 20 )

GET            /frs/list                         controllers.common.FailReasons.list()
POST           /frs/:id                          controllers.common.FailReasons.update(id: Long)
POST           /frs                              controllers.common.FailReasons.create()
DELETE         /frs/:id                          controllers.common.FailReasons.delete(id: Long)

GET            /pics/:ltrId                      controllers.common.Pictures.findPictureNameByLtrId(ltrId:Long)

#GET  /products/new   controllers.Products.newProduct()
#GET  /products/:ean  controllers.Products.details(ean: String)
#POST /products/      controllers.Products.save()

GET            /emailSender                      controllers.common.Application.emailSender()


# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                     controllers.Assets.at(path="/public", file)
